# Motivation
#    We have raw imagery stored in the database with control points
#    Extract the imagery, georeference it, and pass it on
#
# 1. setenv.bat
#
# 2. Call this here imagery grabber
#     python imagery_grabber.py MOER_VPD iluvdoitt247 GEOCSTG.DOITT.NYCNET "D:/matt_projects_data/moer/raw_imagery/"
#
# 3. Then given an image downloaded via the grabber do something like
#
#   C:\Program Files\QGIS 3.10\bin>gdal_translate 
#                                 -of GTIFF 
#                                 -a_ullr 1030938.91092086 199876.558875365 1034606.35743816 196583.711508099 
#                                 -a_srs D:/matt_projects_data/moer/2263.prj 
#                                 D:/matt_projects_data/moer/raw_imagery/BX_1984_345_8.png
#                                 D:/matt_projects_data/moer/georeferenced_imagery/BX_1984_345_8.tif
#
# Where those calls are generated by something like
# 
# select 'gdal_translate -of GTIFF -a_ullr ' || minx || ' ' || maxy || ' ' || maxx || ' ' || miny || ' '
#   || '-a_srs D:/matt_projects_data/moer/2263.prj '
#   || 'D:/matt_projects_data/moer/raw_imagery/' || image_name || ' '
#   || 'D:/matt_projects_data/moer/georeferenced_imagery/' || replace(image_name, '.png', '.tif')
# from image_extents

# TODO
# DEAL WITH DUPES image_name 

import os
import sys
import oracletender

def grabimages(schema
              ,pwd
              ,db
              ,imagepath
              ,sql):

    conn = oracletender.oraclemgr(schema
                                 ,pwd
                                 ,db)

    conn.cursorinit(sql)
        
    while True:

        row = conn.cur.fetchone()

        if row is None:
            break

        oneblob=row[0].read()
        imagefilepath = os.path.join(imagepath, row[1])

        print ("plunking to ", imagefilepath)
        imagefile = open(imagefilepath,'wb')
        imagefile.write(oneblob)
        imagefile.close()


if __name__ == "__main__":

    try:
        schema = sys.argv[1]
        pwd = sys.argv[2]
        db = sys.argv[3]  
        imagepath = sys.argv[4]
    except:
        print ('Expected 4 inputs')
        sys.exit(99)

    sql = """select image_data, image_name
                from 
             image_extents
                where 
             id > 1 and id < 55350"""

    grabimages(schema
              ,pwd
              ,db
              ,imagepath
              ,sql)

    print ("All done, cousin")
                   